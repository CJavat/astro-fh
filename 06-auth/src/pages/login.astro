---
import AuthLayout from "@/layouts/AuthLayout.astro";

const email = Astro.cookies.get("email")?.value ?? "";
const rememberMe = !!email;
---

<AuthLayout
  titlePage="Iniciar Sesión"
  title="Hola, bienvenido de nuevo"
  description="Ingresa tus datos para poder entrar a la página"
>
  <div class="p-12 bg-white mx-auto rounded-2xl w-100">
    <div class="mb-4">
      <h3 class="font-semibold text-2xl text-gray-800">Iniciar Sesión</h3>
      <p class="text-gray-500">Por favor ingresa tus datos.</p>
    </div>
    <form class="space-y-5">
      <div class="space-y-2">
        <label class="text-sm font-medium text-gray-700 tracking-wide"
          >Email</label
        >
        <input
          class="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
          type="email"
          name="email"
          value={email}
          placeholder="mail@gmail.com"
        />
      </div>
      <div class="space-y-2">
        <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
          Contraseña
        </label>
        <input
          class="w-full content-center text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
          type="password"
          name="password"
          placeholder="Enter your password"
        />
      </div>
      <div class="flex items-center justify-between">
        <div class="flex items-center">
          <input
            id="remember_me"
            name="remember_me"
            type="checkbox"
            checked={rememberMe}
            class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded"
          />
          <label for="remember_me" class="ml-2 block text-sm text-gray-800">
            Recordarme
          </label>
        </div>
        <div class="text-sm">
          <a href="/register" class="text-green-400 hover:text-green-500">
            ¿No tienes cuenta?
          </a>
        </div>
      </div>
      <div>
        <button
          type="submit"
          id="btnSubmit"
          class="disabled:bg-gray-300 w-full flex justify-center bg-green-400 hover:bg-green-500 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
        >
          Ingresar
        </button>

        <div class="flex flex-1 w-full my-3">
          <div class="w-full border-t-2 border-gray-500"></div>
        </div>

        <button
          type="button"
          id="btnGoogle"
          class="disabled:bg-gray-300 w-full flex justify-center bg-red-400 hover:bg-red-500 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
        >
          Ingresar Con Google
        </button>
      </div>
    </form>
    <div class="pt-5 text-center text-gray-400 text-xs">
      <span>
        Copyright © 2021-{new Date().getFullYear()}
        <a
          href="https://codepen.io/uidesignhub"
          rel=""
          target="_blank"
          title="Ajimon"
          class="text-green hover:text-green-500">CJavatX</a
        ></span
      >
    </div>
  </div>
</AuthLayout>

<script>
  import type { loginWithGoogle } from "@/actions/auth";
  import { firebase } from "@/firebase/config";
  import { actions } from "astro:actions";
  import { GoogleAuthProvider, signInWithPopup } from "firebase/auth";
  import Swal from "sweetalert2";

  const form = document.querySelector("form") as HTMLFormElement;
  const btnSubmit = document.querySelector("#btnSubmit") as HTMLButtonElement;
  const btnGoogle = document.querySelector("#btnGoogle") as HTMLButtonElement;

  form.addEventListener("submit", async (evt) => {
    evt.preventDefault();
    btnSubmit.setAttribute("disabled", "disabled");

    const formData = new FormData(form);
    const { data, error } = await actions.loginUser(formData);

    if (error) {
      Swal.fire({
        icon: "error",
        title: "Ha ocurrido un error",
        text: error.message,
      });
      btnSubmit.removeAttribute("disabled");
      return;
    }

    window.location.replace("/protected");
  });

  btnGoogle.addEventListener("click", async (evt) => {
    btnGoogle.setAttribute("disabled", "disabled");
    const provider = new GoogleAuthProvider();

    try {
      // Paso 1: Obtener las credenciales del lado del cliente
      const credentials = await signInWithPopup(firebase.auth, provider);

      // Paso 2: Verificar las credenciales en el backend
      const { error } = await actions.loginWithGoogle(credentials);

      if (error) {
        alert(error.message);
        btnGoogle.removeAttribute("disabled");
        return;
      }

      btnGoogle.innerText = "Redireccionando...";
      window.location.replace("/protected");
    } catch (error) {
      console.log(error);
      btnGoogle.removeAttribute("disabled");
    }
  });
</script>
